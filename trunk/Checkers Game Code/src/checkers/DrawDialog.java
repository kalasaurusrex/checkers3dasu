package checkers;

import java.awt.Font;
import java.awt.FontFormatException;
import java.io.IOException;
import java.io.InputStream;
import javax.swing.JOptionPane;
import javax.swing.ImageIcon;

/**
 *
 * @author kalamath
 */
public class DrawDialog extends javax.swing.JDialog {
    User visitorUser;
    User homeUser;
    //load the Old English font with a given size and type
    private Font loadFont(int type, float size)
    {
        Font font = null;
        try
        {
            InputStream input = this.getClass().getResourceAsStream("/OLDENGL.TTF");
            font = Font.createFont(Font.PLAIN, input).deriveFont(type, size);
        }
        catch (IOException ioe)
        {
            System.err.println(ioe);
            System.exit(1);
        }
        catch (FontFormatException ffe)
        {
            System.err.println(ffe);
            System.exit(1);
        }
        return font;
    }
    // load Fonts
    Font oldEnglish_18 = loadFont(Font.PLAIN, 18);
    /** Creates new form DrawDialog */
    public DrawDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        visitorNameDisplay = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        homeNameDisplay = new javax.swing.JLabel();
        jPasswordField2 = new javax.swing.JPasswordField();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(500, 400));
        getContentPane().setLayout(null);

        jLabel1.setFont(oldEnglish_18);
        jLabel1.setText("Will You Agree to Draw With Me?");
        jPanel1.add(jLabel1);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 440, 50);

        jLabel2.setFont(oldEnglish_18);
        jLabel2.setText("If both players enter their passwords below,");
        jPanel2.add(jLabel2);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 50, 440, 50);

        jPanel4.setLayout(new java.awt.GridLayout());

        visitorNameDisplay.setFont(oldEnglish_18);
        visitorNameDisplay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel4.add(visitorNameDisplay);

        jPasswordField1.setText(null);
        jPasswordField1.setPreferredSize(new java.awt.Dimension(125, 30));
        jPanel4.add(jPasswordField1);

        homeNameDisplay.setFont(oldEnglish_18);
        homeNameDisplay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel4.add(homeNameDisplay);

        jPanel4.add(jPasswordField2);

        getContentPane().add(jPanel4);
        jPanel4.setBounds(0, 150, 430, 50);

        jPanel3.setPreferredSize(new java.awt.Dimension(420, 100));
        jPanel3.setLayout(new java.awt.GridLayout());

        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1);

        jButton2.setText("OK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2);

        getContentPane().add(jPanel3);
        jPanel3.setBounds(160, 250, 300, 100);

        jLabel3.setFont(oldEnglish_18);
        jLabel3.setText("the game will end in a draw.");
        jPanel5.add(jLabel3);

        getContentPane().add(jPanel5);
        jPanel5.setBounds(0, 100, 440, 50);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
}//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String visitorPasswordEntry = jPasswordField1.getText();
        String homePasswordEntry = jPasswordField2.getText();
        if (visitorPasswordEntry.equals(visitorUser.getPassword()) && homePasswordEntry.equals(homeUser.getPassword())) {
            // record a tie for both players
            visitorUser.getStats().addTie();
            homeUser.getStats().addTie();
            // update PvP stats for visitor player
            if (visitorUser.getStats().pvpRecords.containsKey(homeUser)) {
                visitorUser.getStats().pvpRecords.get(homeUser).addTie();
            } else {
                visitorUser.getStats().pvpRecords.put(homeUser, new Record(0, 0, 1));
            }
            // update PvP stats for the home player
            if (homeUser.getStats().pvpRecords.containsKey(visitorUser)) {
                homeUser.getStats().pvpRecords.get(visitorUser).addTie();
            } else {
                homeUser.getStats().pvpRecords.put(visitorUser, new Record(0, 0, 1));
            }
            Main.storage.saveStorage();
            this.getOwner().dispose();
            Main.restart();
            // one or more of the passwords does not match
        } else {
            JOptionPane.showMessageDialog(this, "One or more of the passwords do not match",
                    "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    public void setVisitorLabelText(String entry) {
        visitorNameDisplay.setText(entry);
    }
    public void setHomeLabelText(String entry) {
        homeNameDisplay.setText(entry);
    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DrawDialog dialog = new DrawDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel homeNameDisplay;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JLabel visitorNameDisplay;
    // End of variables declaration//GEN-END:variables

}
