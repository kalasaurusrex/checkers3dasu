/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LoginScreen.java
 *
 * Created on Oct 15, 2009, 9:32:14 AM
 */

package checkers;

import java.util.*;
import javax.swing.*;
import javax.naming.*;
import java.security.InvalidParameterException;
import java.io.*;

/**
 *
 * @author kalamath
 */
public class LoginScreen extends javax.swing.JFrame
{
    private static final int NEW = 0;
    private static final int ADMIN = 1;
    private static final int STATS = 2;

    private User homePlayer;
    private User visitorPlayer;
    private boolean player1LoggedIn = false;
    private boolean player2LoggedIn = false;
    private int boardSize;
    private String input;
    private Storage storage = Storage.getStorageInstance();

    /** Creates new form LoginScreen */
    public LoginScreen()
    {
        initComponents();
    }
    // constructor used to create a new LoginScreen.  the constants NEW, ADMIN,
    // and STATS are used to create different versions of the LoginScreen,
    // depending on the application.

    public LoginScreen(int selection) {
        initComponents();
        // selection code 0 is used to instatiate a LoginScreen that allows 2
        // players to log in to a new game
        if (selection == NEW) {
            vsLabel.setVisible(false);
            // selection code 1 is used to instatiate a LoginScreen that allows an
            // administrator to log in and perform administrative tasks.
        } else if (selection == ADMIN) {
            // selection code 2 is used to instatiate a LoginScreen that allows a
            // user to log in and view statistics.
        } else if (selection == STATS) {
            // any other selection code is invalid and results in an
            // InvalidParameterException.
        } else {
            InvalidParameterException ipe = new InvalidParameterException("Invalid Selection Code");
        }
    }
    // constructor used to create a LoginScreen when loading a saved game
    public LoginScreen(String homePlayer, String visitorPlayer, Date timeStamp)
    {
        initComponents();
    }

    public boolean validatePassword (String input)
    {
        return true;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        vsLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        player1Button = new javax.swing.JButton();
        player1NameSelect = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        player2Button = new javax.swing.JButton();
        player2NameSelect = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        visitorPlayerNameDisplay = new javax.swing.JLabel();
        playGameButton = new javax.swing.JButton();
        homePlayerNameDisplay = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(660, 445));
        setName("frame78"); // NOI18N
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Old English Text MT", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("New Game - Log In");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(100, 20, 432, 62);

        vsLabel.setFont(new java.awt.Font("Old English Text MT", 1, 64)); // NOI18N
        vsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        vsLabel.setText("VS");
        getContentPane().add(vsLabel);
        vsLabel.setBounds(267, 100, 124, 147);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(0, 72, 650, 10);

        jPanel1.setMinimumSize(new java.awt.Dimension(265, 135));
        jPanel1.setLayout(new java.awt.BorderLayout());

        player1Button.setFont(new java.awt.Font("Old English Text MT", 0, 18));
        player1Button.setText("Player 1 Login");
        player1Button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        player1Button.setMaximumSize(new java.awt.Dimension(170, 125));
        player1Button.setMinimumSize(new java.awt.Dimension(170, 125));
        player1Button.setPreferredSize(new java.awt.Dimension(170, 125));
        player1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                player1ButtonActionPerformed(evt);
            }
        });
        jPanel1.add(player1Button, java.awt.BorderLayout.CENTER);

        player1NameSelect.setFont(new java.awt.Font("Old English Text MT", 0, 14)); // NOI18N
        player1NameSelect.setMaximumSize(new java.awt.Dimension(170, 30));
        player1NameSelect.setMinimumSize(new java.awt.Dimension(170, 30));
        player1NameSelect.setPreferredSize(new java.awt.Dimension(170, 30));
        player1NameSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                player1NameSelectActionPerformed(evt);
            }
        });
        jPanel1.add(player1NameSelect, java.awt.BorderLayout.PAGE_END);
        player1NameSelect.setVisible(false);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(30, 90, 200, 200);

        jPanel2.setLayout(new java.awt.BorderLayout());

        player2Button.setFont(new java.awt.Font("Old English Text MT", 0, 18)); // NOI18N
        player2Button.setText("Player 2 Login");
        player2Button.setMaximumSize(new java.awt.Dimension(125, 125));
        player2Button.setMinimumSize(new java.awt.Dimension(125, 125));
        player2Button.setPreferredSize(new java.awt.Dimension(125, 125));
        player2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                player2ButtonActionPerformed(evt);
            }
        });
        jPanel2.add(player2Button, java.awt.BorderLayout.CENTER);
        player2Button.setVisible(false);

        player2NameSelect.setFont(new java.awt.Font("Old English Text MT", 0, 14)); // NOI18N
        player2NameSelect.setMinimumSize(new java.awt.Dimension(125, 30));
        player2NameSelect.setPreferredSize(new java.awt.Dimension(125, 30));
        player2NameSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                player2NameSelectActionPerformed(evt);
            }
        });
        jPanel2.add(player2NameSelect, java.awt.BorderLayout.PAGE_END);
        player2NameSelect.setVisible(false);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(425, 90, 200, 200);

        visitorPlayerNameDisplay.setFont(new java.awt.Font("Old English Text MT", 0, 18)); // NOI18N
        visitorPlayerNameDisplay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/checkers/images/PieceKingBlack.png"))); // NOI18N
        visitorPlayerNameDisplay.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        visitorPlayerNameDisplay.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                visitorPlayerNameDisplayComponentShown(evt);
            }
        });

        playGameButton.setBackground(java.awt.Color.green);
        playGameButton.setFont(new java.awt.Font("Old English Text MT", 0, 18)); // NOI18N
        playGameButton.setText("Play Game!");
        playGameButton.setAlignmentX(0.5F);
        playGameButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        playGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playGameButtonActionPerformed(evt);
            }
        });

        homePlayerNameDisplay.setFont(new java.awt.Font("Old English Text MT", 0, 18)); // NOI18N
        homePlayerNameDisplay.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        homePlayerNameDisplay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/checkers/images/PieceKingRed.png"))); // NOI18N
        homePlayerNameDisplay.setAlignmentX(1.0F);
        homePlayerNameDisplay.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        homePlayerNameDisplay.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                homePlayerNameDisplayComponentShown(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(visitorPlayerNameDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(playGameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(homePlayerNameDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(visitorPlayerNameDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(playGameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(homePlayerNameDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        visitorPlayerNameDisplay.setVisible(false);
        playGameButton.setVisible(false);
        homePlayerNameDisplay.setVisible(false);

        getContentPane().add(jPanel3);
        jPanel3.setBounds(30, 310, 600, 100);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void player2NameSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_player2NameSelectActionPerformed
        homePlayer = (User) player2NameSelect.getSelectedItem();
        String passwordEntry = JOptionPane.showInputDialog(this, homePlayer.getUserName() + ", please enter your password", "Password Entry", JOptionPane.QUESTION_MESSAGE);
        if (!(passwordEntry == null)) {
            if (!passwordEntry.equals(homePlayer.getPassword())) {
                JOptionPane.showMessageDialog(this, "Incorrect Password!", "Password Incorrect", JOptionPane.WARNING_MESSAGE);
                return;
            }
            homePlayerNameDisplay.setText(homePlayer.toString());
            homePlayerNameDisplay.setVisible(true);
            player2LoggedIn = true;
            if (player1LoggedIn && player2LoggedIn) {
                playGameButton.setVisible(true);
            }
        } else {
            return;
        }
    }//GEN-LAST:event_player2NameSelectActionPerformed

    private void player2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_player2ButtonActionPerformed
        Object[] options = {"New User", "Sign In",};
        int selection = -1;
        while (selection == -1) {
            selection = JOptionPane.showOptionDialog(this, "Player 2, make a " +
                    "selection:", "Player 2 Login",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options,
                    options[1]);
        }
        if (selection == 1) { // Sign In selected
            player2NameSelect.setModel(new DefaultComboBoxModel(storage.getUserList()));
            player2NameSelect.setVisible(true);
        } else { // New User selected
                    player2NameSelect.setVisible(false);
                    NewUserForm newForm = new NewUserForm(this, true);
                    newForm.setVisible(true);
                }
    }//GEN-LAST:event_player2ButtonActionPerformed

        private void playGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playGameButtonActionPerformed
            Object[] options = {"8x8 Board", "10x10 Board",};
            int boardSizeSelection = -1;
            while (boardSizeSelection == -1) {
                boardSizeSelection = JOptionPane.showOptionDialog(this,
                    "Select a board size", "Board Size", JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
            }
            int width = 0;
            if (boardSizeSelection == 0) {
                width = 8;
            } else {
                width = 10;
            }
            //setVisible(false);
            new GameScreen(width, visitorPlayer.toString(), homePlayer.toString()).setVisible(true);
            setVisible(false);
        }//GEN-LAST:event_playGameButtonActionPerformed

        private void player1NameSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_player1NameSelectActionPerformed
            visitorPlayer = (User) player1NameSelect.getSelectedItem();
            String passwordEntry = JOptionPane.showInputDialog(this, visitorPlayer.getUserName() + ", please enter your password", "Password Entry", JOptionPane.QUESTION_MESSAGE);
            if (!(passwordEntry == null)) {
                if (!passwordEntry.equals(visitorPlayer.getPassword())) {
                    JOptionPane.showMessageDialog(this, "Incorrect Password!", "Password Incorrect", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                visitorPlayerNameDisplay.setText(visitorPlayer.toString());
                visitorPlayerNameDisplay.setVisible(true);
                vsLabel.setVisible(true);
                player2Button.setVisible(true);
                player1LoggedIn = true;
                if (player1LoggedIn && player2LoggedIn) {
                    playGameButton.setVisible(true);
                }
            } else {
                return;
            }
}//GEN-LAST:event_player1NameSelectActionPerformed

        private void player1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_player1ButtonActionPerformed
            Object[] options = {"New User", "Sign In",};
            int selection = -1;
            while (selection == -1) { // force the user to make a selection
                selection = JOptionPane.showOptionDialog(this, "Player 1, make a " +
                        "selection:", "Player 1 Login",
                        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options,
                        options[1]);
            }
            if (selection == 1) { // Sign In selected
                player1NameSelect.setModel(new DefaultComboBoxModel(storage.getUserList()));
                player1NameSelect.setVisible(true);
            } else { // New User selected
                player1NameSelect.setVisible(false);
                NewUserForm newForm = new NewUserForm(this, true);
                newForm.setVisible(true);
            }
}//GEN-LAST:event_player1ButtonActionPerformed

        private void visitorPlayerNameDisplayComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_visitorPlayerNameDisplayComponentShown
               visitorPlayerNameDisplay.setHorizontalTextPosition(SwingConstants.RIGHT);
        }//GEN-LAST:event_visitorPlayerNameDisplayComponentShown

        private void homePlayerNameDisplayComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_homePlayerNameDisplayComponentShown
                homePlayerNameDisplay.setHorizontalTextPosition(SwingConstants.LEFT);
        }//GEN-LAST:event_homePlayerNameDisplayComponentShown

    /**
    * @param args the command line arguments
    */
    public static void main(String args[])
    {
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new LoginScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel homePlayerNameDisplay;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton playGameButton;
    private javax.swing.JButton player1Button;
    private javax.swing.JComboBox player1NameSelect;
    private javax.swing.JButton player2Button;
    private javax.swing.JComboBox player2NameSelect;
    private javax.swing.JLabel visitorPlayerNameDisplay;
    private javax.swing.JLabel vsLabel;
    // End of variables declaration//GEN-END:variables

}
